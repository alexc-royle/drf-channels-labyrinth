version: '3'

services:
  db:
    restart: unless-stopped
    image: "postgres:alpine"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
  redis:
    restart: unless-stopped
    image: "redis:alpine"
    ports:
      - 6379
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
  backend:
    restart: unless-stopped
    build: ./backend
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/code
    working_dir: /code
    links:
      - db:db
      - redis:redis
    depends_on:
      - db
      - redis
  backendtest:
    restart: unless-stopped
    build: ./backend
    command: watchmedo shell-command --recursive --pattern="*.py" --command="coverage run --source='.' manage.py test --noinput; coverage report -m"
    volumes:
      - ./backend:/code
    working_dir: /code
    links:
      - db:db
      - redis:redis
    depends_on:
      - db
      - redis
  frontend:
    restart: unless-stopped
    build: ./frontend
    volumes:
      - ./frontend:/app
    working_dir: /app
    entrypoint: sh entrypoint.sh
    links:
      - backend
  nginx:
    image: "nginx:1.14-alpine"
    links:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - '8080:80'
